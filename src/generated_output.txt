operations[0x00] = new Operation("NOP", (CPU cpu) -> cpu.NOP(), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x01] = new Operation("LD BC d16", (CPU cpu) -> cpu.LD_16(rf.BC, null, -1, d16(), false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {12,0});
operations[0x02] = new Operation("LD (BC) A", (CPU cpu) -> cpu.LD_8(rf.BC, rf.A, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x03] = new Operation("INC BC", (CPU cpu) -> cpu.INC_16(rf.BC), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x04] = new Operation("INC B", (CPU cpu) -> cpu.INC_8(rf.B), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x05] = new Operation("DEC B", (CPU cpu) -> cpu.DEC_8(rf.B), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x06] = new Operation("LD B d8", (CPU cpu) -> cpu.LD_8(rf.B, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x07] = new Operation("RLCA", (CPU cpu) -> cpu.RLCA(), new char[] {'0', '0', '0', 'C'}, 1, new int[] {4,0});
operations[0x08] = new Operation("LD (a16) SP", (CPU cpu) -> cpu.LD_16(null, rf.SP, a16(), -1, false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {20,0});
operations[0x09] = new Operation("ADD HL BC", (CPU cpu) -> cpu.ADD_16(rf.HL, rf.BC), new char[] {'-', '0', 'H', 'C'}, 1, new int[] {8,0});
operations[0x0a] = new Operation("LD A (BC)", (CPU cpu) -> cpu.LD_8(rf.A, rf.BC, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x0b] = new Operation("DEC BC", (CPU cpu) -> cpu.DEC_16(rf.BC), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x0c] = new Operation("INC C", (CPU cpu) -> cpu.INC_8(rf.C), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x0d] = new Operation("DEC C", (CPU cpu) -> cpu.DEC_8(rf.C), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x0e] = new Operation("LD C d8", (CPU cpu) -> cpu.LD_8(rf.C, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x0f] = new Operation("RRCA", (CPU cpu) -> cpu.RRCA(), new char[] {'0', '0', '0', 'C'}, 1, new int[] {4,0});
operations[0x10] = new Operation("STOP 0", (CPU cpu) -> cpu.STOP(), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x11] = new Operation("LD DE d16", (CPU cpu) -> cpu.LD_16(rf.DE, null, -1, d16(), false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {12,0});
operations[0x12] = new Operation("LD (DE) A", (CPU cpu) -> cpu.LD_8(rf.DE, rf.A, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x13] = new Operation("INC DE", (CPU cpu) -> cpu.INC_16(rf.DE), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x14] = new Operation("INC D", (CPU cpu) -> cpu.INC_8(rf.D), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x15] = new Operation("DEC D", (CPU cpu) -> cpu.DEC_8(rf.D), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x16] = new Operation("LD D d8", (CPU cpu) -> cpu.LD_8(rf.D, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x17] = new Operation("RLA", (CPU cpu) -> cpu.RLA(), new char[] {'0', '0', '0', 'C'}, 1, new int[] {4,0});
operations[0x18] = new Operation("JR r8", (CPU cpu) -> cpu.JR(Condition.NONE, r8()), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,0});
operations[0x19] = new Operation("ADD HL DE", (CPU cpu) -> cpu.ADD_16(rf.HL, rf.DE), new char[] {'-', '0', 'H', 'C'}, 1, new int[] {8,0});
operations[0x1a] = new Operation("LD A (DE)", (CPU cpu) -> cpu.LD_8(rf.A, rf.DE, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x1b] = new Operation("DEC DE", (CPU cpu) -> cpu.DEC_16(rf.DE), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x1c] = new Operation("INC E", (CPU cpu) -> cpu.INC_8(rf.E), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x1d] = new Operation("DEC E", (CPU cpu) -> cpu.DEC_8(rf.E), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x1e] = new Operation("LD E d8", (CPU cpu) -> cpu.LD_8(rf.E, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x1f] = new Operation("RRA", (CPU cpu) -> cpu.RRA(), new char[] {'0', '0', '0', 'C'}, 1, new int[] {4,0});
operations[0x20] = new Operation("JR NZ r8", (CPU cpu) -> cpu.JR(Condition.NZ, r8()), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,8});
operations[0x21] = new Operation("LD HL d16", (CPU cpu) -> cpu.LD_16(rf.HL, null, -1, d16(), false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {12,0});
operations[0x22] = new Operation("LD (HL+) A", (CPU cpu) -> cpu.LD_8(rf.HL, rf.A, -1, -1, true, false, false, false, true, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x23] = new Operation("INC HL", (CPU cpu) -> cpu.INC_16(rf.HL), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x24] = new Operation("INC H", (CPU cpu) -> cpu.INC_8(rf.H), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x25] = new Operation("DEC H", (CPU cpu) -> cpu.DEC_8(rf.H), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x26] = new Operation("LD H d8", (CPU cpu) -> cpu.LD_8(rf.H, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x27] = new Operation("DAA", (CPU cpu) -> cpu.DAA(rf.A), new char[] {'Z', '-', '0', 'C'}, 1, new int[] {4,0});
operations[0x28] = new Operation("JR Z r8", (CPU cpu) -> cpu.JR(Condition.Z, r8()), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,8});
operations[0x29] = new Operation("ADD HL HL", (CPU cpu) -> cpu.ADD_16(rf.HL, rf.HL), new char[] {'-', '0', 'H', 'C'}, 1, new int[] {8,0});
operations[0x2a] = new Operation("LD A (HL+)", (CPU cpu) -> cpu.LD_8(rf.A, rf.HL, -1, -1, false, true, false, false, true, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x2b] = new Operation("DEC HL", (CPU cpu) -> cpu.DEC_16(rf.HL), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x2c] = new Operation("INC L", (CPU cpu) -> cpu.INC_8(rf.L), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x2d] = new Operation("DEC L", (CPU cpu) -> cpu.DEC_8(rf.L), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x2e] = new Operation("LD L d8", (CPU cpu) -> cpu.LD_8(rf.L, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x2f] = new Operation("CPL", (CPU cpu) -> cpu.CPL(), new char[] {'-', '1', '1', '-'}, 1, new int[] {4,0});
operations[0x30] = new Operation("JR NC r8", (CPU cpu) -> cpu.JR(Condition.NC, r8()), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,8});
operations[0x31] = new Operation("LD SP d16", (CPU cpu) -> cpu.LD_16(rf.SP, null, -1, d16(), false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {12,0});
operations[0x32] = new Operation("LD (HL-) A", (CPU cpu) -> cpu.LD_8(rf.HL, rf.A, -1, -1, true, false, false, false, false, true), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x33] = new Operation("INC SP", (CPU cpu) -> cpu.INC_16(rf.SP), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x34] = new Operation("INC (HL)", (CPU cpu) -> cpu.INC_8(rf.HL), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {12,0});
operations[0x35] = new Operation("DEC (HL)", (CPU cpu) -> cpu.DEC_8(rf.HL), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {12,0});
operations[0x36] = new Operation("LD (HL) d8", (CPU cpu) -> cpu.LD_8(rf.HL, null, -1, d8(), true, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,0});
operations[0x37] = new Operation("SCF", (CPU cpu) -> cpu.SCF(), new char[] {'-', '0', '0', '1'}, 1, new int[] {4,0});
operations[0x38] = new Operation("JR C r8", (CPU cpu) -> cpu.JR(Condition.C, r8()), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,8});
operations[0x39] = new Operation("ADD HL SP", (CPU cpu) -> cpu.ADD_16(rf.HL, rf.SP), new char[] {'-', '0', 'H', 'C'}, 1, new int[] {8,0});
operations[0x3a] = new Operation("LD A (HL-)", (CPU cpu) -> cpu.LD_8(rf.A, rf.HL, -1, -1, false, true, false, false, false, true), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x3b] = new Operation("DEC SP", (CPU cpu) -> cpu.DEC_16(rf.SP), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x3c] = new Operation("INC A", (CPU cpu) -> cpu.INC_8(rf.A), new char[] {'Z', '0', 'H', '-'}, 1, new int[] {4,0});
operations[0x3d] = new Operation("DEC A", (CPU cpu) -> cpu.DEC_8(rf.A), new char[] {'Z', '1', 'H', '-'}, 1, new int[] {4,0});
operations[0x3e] = new Operation("LD A d8", (CPU cpu) -> cpu.LD_8(rf.A, null, -1, d8(), false, false, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x3f] = new Operation("CCF", (CPU cpu) -> cpu.CCF(), new char[] {'-', '0', '0', 'C'}, 1, new int[] {4,0});
operations[0x40] = new Operation("LD B B", (CPU cpu) -> cpu.LD_8(rf.B, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x41] = new Operation("LD B C", (CPU cpu) -> cpu.LD_8(rf.B, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x42] = new Operation("LD B D", (CPU cpu) -> cpu.LD_8(rf.B, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x43] = new Operation("LD B E", (CPU cpu) -> cpu.LD_8(rf.B, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x44] = new Operation("LD B H", (CPU cpu) -> cpu.LD_8(rf.B, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x45] = new Operation("LD B L", (CPU cpu) -> cpu.LD_8(rf.B, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x46] = new Operation("LD B (HL)", (CPU cpu) -> cpu.LD_8(rf.B, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x47] = new Operation("LD B A", (CPU cpu) -> cpu.LD_8(rf.B, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x48] = new Operation("LD C B", (CPU cpu) -> cpu.LD_8(rf.C, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x49] = new Operation("LD C C", (CPU cpu) -> cpu.LD_8(rf.C, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x4a] = new Operation("LD C D", (CPU cpu) -> cpu.LD_8(rf.C, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x4b] = new Operation("LD C E", (CPU cpu) -> cpu.LD_8(rf.C, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x4c] = new Operation("LD C H", (CPU cpu) -> cpu.LD_8(rf.C, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x4d] = new Operation("LD C L", (CPU cpu) -> cpu.LD_8(rf.C, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x4e] = new Operation("LD C (HL)", (CPU cpu) -> cpu.LD_8(rf.C, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x4f] = new Operation("LD C A", (CPU cpu) -> cpu.LD_8(rf.C, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x50] = new Operation("LD D B", (CPU cpu) -> cpu.LD_8(rf.D, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x51] = new Operation("LD D C", (CPU cpu) -> cpu.LD_8(rf.D, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x52] = new Operation("LD D D", (CPU cpu) -> cpu.LD_8(rf.D, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x53] = new Operation("LD D E", (CPU cpu) -> cpu.LD_8(rf.D, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x54] = new Operation("LD D H", (CPU cpu) -> cpu.LD_8(rf.D, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x55] = new Operation("LD D L", (CPU cpu) -> cpu.LD_8(rf.D, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x56] = new Operation("LD D (HL)", (CPU cpu) -> cpu.LD_8(rf.D, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x57] = new Operation("LD D A", (CPU cpu) -> cpu.LD_8(rf.D, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x58] = new Operation("LD E B", (CPU cpu) -> cpu.LD_8(rf.E, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x59] = new Operation("LD E C", (CPU cpu) -> cpu.LD_8(rf.E, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x5a] = new Operation("LD E D", (CPU cpu) -> cpu.LD_8(rf.E, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x5b] = new Operation("LD E E", (CPU cpu) -> cpu.LD_8(rf.E, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x5c] = new Operation("LD E H", (CPU cpu) -> cpu.LD_8(rf.E, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x5d] = new Operation("LD E L", (CPU cpu) -> cpu.LD_8(rf.E, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x5e] = new Operation("LD E (HL)", (CPU cpu) -> cpu.LD_8(rf.E, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x5f] = new Operation("LD E A", (CPU cpu) -> cpu.LD_8(rf.E, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x60] = new Operation("LD H B", (CPU cpu) -> cpu.LD_8(rf.H, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x61] = new Operation("LD H C", (CPU cpu) -> cpu.LD_8(rf.H, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x62] = new Operation("LD H D", (CPU cpu) -> cpu.LD_8(rf.H, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x63] = new Operation("LD H E", (CPU cpu) -> cpu.LD_8(rf.H, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x64] = new Operation("LD H H", (CPU cpu) -> cpu.LD_8(rf.H, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x65] = new Operation("LD H L", (CPU cpu) -> cpu.LD_8(rf.H, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x66] = new Operation("LD H (HL)", (CPU cpu) -> cpu.LD_8(rf.H, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x67] = new Operation("LD H A", (CPU cpu) -> cpu.LD_8(rf.H, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x68] = new Operation("LD L B", (CPU cpu) -> cpu.LD_8(rf.L, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x69] = new Operation("LD L C", (CPU cpu) -> cpu.LD_8(rf.L, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x6a] = new Operation("LD L D", (CPU cpu) -> cpu.LD_8(rf.L, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x6b] = new Operation("LD L E", (CPU cpu) -> cpu.LD_8(rf.L, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x6c] = new Operation("LD L H", (CPU cpu) -> cpu.LD_8(rf.L, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x6d] = new Operation("LD L L", (CPU cpu) -> cpu.LD_8(rf.L, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x6e] = new Operation("LD L (HL)", (CPU cpu) -> cpu.LD_8(rf.L, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x6f] = new Operation("LD L A", (CPU cpu) -> cpu.LD_8(rf.L, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x70] = new Operation("LD (HL) B", (CPU cpu) -> cpu.LD_8(rf.HL, rf.B, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x71] = new Operation("LD (HL) C", (CPU cpu) -> cpu.LD_8(rf.HL, rf.C, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x72] = new Operation("LD (HL) D", (CPU cpu) -> cpu.LD_8(rf.HL, rf.D, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x73] = new Operation("LD (HL) E", (CPU cpu) -> cpu.LD_8(rf.HL, rf.E, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x74] = new Operation("LD (HL) H", (CPU cpu) -> cpu.LD_8(rf.HL, rf.H, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x75] = new Operation("LD (HL) L", (CPU cpu) -> cpu.LD_8(rf.HL, rf.L, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x76] = new Operation("HALT", (CPU cpu) -> cpu.HALT(), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x77] = new Operation("LD (HL) A", (CPU cpu) -> cpu.LD_8(rf.HL, rf.A, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x78] = new Operation("LD A B", (CPU cpu) -> cpu.LD_8(rf.A, rf.B, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x79] = new Operation("LD A C", (CPU cpu) -> cpu.LD_8(rf.A, rf.C, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x7a] = new Operation("LD A D", (CPU cpu) -> cpu.LD_8(rf.A, rf.D, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x7b] = new Operation("LD A E", (CPU cpu) -> cpu.LD_8(rf.A, rf.E, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x7c] = new Operation("LD A H", (CPU cpu) -> cpu.LD_8(rf.A, rf.H, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x7d] = new Operation("LD A L", (CPU cpu) -> cpu.LD_8(rf.A, rf.L, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x7e] = new Operation("LD A (HL)", (CPU cpu) -> cpu.LD_8(rf.A, rf.HL, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0x7f] = new Operation("LD A A", (CPU cpu) -> cpu.LD_8(rf.A, rf.A, -1, -1, false, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0x80] = new Operation("ADD A B", (CPU cpu) -> cpu.ADD_8(rf.A, rf.B, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x81] = new Operation("ADD A C", (CPU cpu) -> cpu.ADD_8(rf.A, rf.C, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x82] = new Operation("ADD A D", (CPU cpu) -> cpu.ADD_8(rf.A, rf.D, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x83] = new Operation("ADD A E", (CPU cpu) -> cpu.ADD_8(rf.A, rf.E, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x84] = new Operation("ADD A H", (CPU cpu) -> cpu.ADD_8(rf.A, rf.H, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x85] = new Operation("ADD A L", (CPU cpu) -> cpu.ADD_8(rf.A, rf.L, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x86] = new Operation("ADD A (HL)", (CPU cpu) -> cpu.ADD_8(rf.A, rf.HL, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {8,0});
operations[0x87] = new Operation("ADD A A", (CPU cpu) -> cpu.ADD_8(rf.A, rf.A, 0, false), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x88] = new Operation("ADC A B", (CPU cpu) -> cpu.ADC(rf.A, rf.B, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x89] = new Operation("ADC A C", (CPU cpu) -> cpu.ADC(rf.A, rf.C, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x8a] = new Operation("ADC A D", (CPU cpu) -> cpu.ADC(rf.A, rf.D, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x8b] = new Operation("ADC A E", (CPU cpu) -> cpu.ADC(rf.A, rf.E, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x8c] = new Operation("ADC A H", (CPU cpu) -> cpu.ADC(rf.A, rf.H, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x8d] = new Operation("ADC A L", (CPU cpu) -> cpu.ADC(rf.A, rf.L, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x8e] = new Operation("ADC A (HL)", (CPU cpu) -> cpu.ADC(rf.A, rf.HL, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {8,0});
operations[0x8f] = new Operation("ADC A A", (CPU cpu) -> cpu.ADC(rf.A, rf.A, 0), new char[] {'Z', '0', 'H', 'C'}, 1, new int[] {4,0});
operations[0x90] = new Operation("SUB B", (CPU cpu) -> cpu.SUB(rf.A, rf.B, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x91] = new Operation("SUB C", (CPU cpu) -> cpu.SUB(rf.A, rf.C, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x92] = new Operation("SUB D", (CPU cpu) -> cpu.SUB(rf.A, rf.D, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x93] = new Operation("SUB E", (CPU cpu) -> cpu.SUB(rf.A, rf.E, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x94] = new Operation("SUB H", (CPU cpu) -> cpu.SUB(rf.A, rf.H, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x95] = new Operation("SUB L", (CPU cpu) -> cpu.SUB(rf.A, rf.L, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x96] = new Operation("SUB (HL)", (CPU cpu) -> cpu.SUB(rf.A, rf.HL, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {8,0});
operations[0x97] = new Operation("SUB A", (CPU cpu) -> cpu.SUB(rf.A, rf.A, 0, false, true), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x98] = new Operation("SBC A B", (CPU cpu) -> cpu.SBC(rf.A, rf.B, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x99] = new Operation("SBC A C", (CPU cpu) -> cpu.SBC(rf.A, rf.C, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x9a] = new Operation("SBC A D", (CPU cpu) -> cpu.SBC(rf.A, rf.D, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x9b] = new Operation("SBC A E", (CPU cpu) -> cpu.SBC(rf.A, rf.E, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x9c] = new Operation("SBC A H", (CPU cpu) -> cpu.SBC(rf.A, rf.H, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x9d] = new Operation("SBC A L", (CPU cpu) -> cpu.SBC(rf.A, rf.L, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0x9e] = new Operation("SBC A (HL)", (CPU cpu) -> cpu.SBC(rf.A, rf.HL, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {8,0});
operations[0x9f] = new Operation("SBC A A", (CPU cpu) -> cpu.SBC(rf.A, rf.A, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xa0] = new Operation("AND B", (CPU cpu) -> cpu.AND(rf.A, rf.B, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa1] = new Operation("AND C", (CPU cpu) -> cpu.AND(rf.A, rf.C, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa2] = new Operation("AND D", (CPU cpu) -> cpu.AND(rf.A, rf.D, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa3] = new Operation("AND E", (CPU cpu) -> cpu.AND(rf.A, rf.E, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa4] = new Operation("AND H", (CPU cpu) -> cpu.AND(rf.A, rf.H, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa5] = new Operation("AND L", (CPU cpu) -> cpu.AND(rf.A, rf.L, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa6] = new Operation("AND (HL)", (CPU cpu) -> cpu.AND(rf.A, rf.HL, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {8,0});
operations[0xa7] = new Operation("AND A", (CPU cpu) -> cpu.AND(rf.A, rf.A, 0), new char[] {'Z', '0', '1', '0'}, 1, new int[] {4,0});
operations[0xa8] = new Operation("XOR B", (CPU cpu) -> cpu.XOR(rf.A, rf.B, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xa9] = new Operation("XOR C", (CPU cpu) -> cpu.XOR(rf.A, rf.C, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xaa] = new Operation("XOR D", (CPU cpu) -> cpu.XOR(rf.A, rf.D, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xab] = new Operation("XOR E", (CPU cpu) -> cpu.XOR(rf.A, rf.E, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xac] = new Operation("XOR H", (CPU cpu) -> cpu.XOR(rf.A, rf.H, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xad] = new Operation("XOR L", (CPU cpu) -> cpu.XOR(rf.A, rf.L, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xae] = new Operation("XOR (HL)", (CPU cpu) -> cpu.XOR(rf.A, rf.HL, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {8,0});
operations[0xaf] = new Operation("XOR A", (CPU cpu) -> cpu.XOR(rf.A, rf.A, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb0] = new Operation("OR B", (CPU cpu) -> cpu.OR(rf.A, rf.B, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb1] = new Operation("OR C", (CPU cpu) -> cpu.OR(rf.A, rf.C, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb2] = new Operation("OR D", (CPU cpu) -> cpu.OR(rf.A, rf.D, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb3] = new Operation("OR E", (CPU cpu) -> cpu.OR(rf.A, rf.E, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb4] = new Operation("OR H", (CPU cpu) -> cpu.OR(rf.A, rf.H, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb5] = new Operation("OR L", (CPU cpu) -> cpu.OR(rf.A, rf.L, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb6] = new Operation("OR (HL)", (CPU cpu) -> cpu.OR(rf.A, rf.HL, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {8,0});
operations[0xb7] = new Operation("OR A", (CPU cpu) -> cpu.OR(rf.A, rf.A, 0), new char[] {'Z', '0', '0', '0'}, 1, new int[] {4,0});
operations[0xb8] = new Operation("CP B", (CPU cpu) -> cpu.CP(rf.A, rf.B, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xb9] = new Operation("CP C", (CPU cpu) -> cpu.CP(rf.A, rf.C, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xba] = new Operation("CP D", (CPU cpu) -> cpu.CP(rf.A, rf.D, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xbb] = new Operation("CP E", (CPU cpu) -> cpu.CP(rf.A, rf.E, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xbc] = new Operation("CP H", (CPU cpu) -> cpu.CP(rf.A, rf.H, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xbd] = new Operation("CP L", (CPU cpu) -> cpu.CP(rf.A, rf.L, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xbe] = new Operation("CP (HL)", (CPU cpu) -> cpu.CP(rf.A, rf.HL, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {8,0});
operations[0xbf] = new Operation("CP A", (CPU cpu) -> cpu.CP(rf.A, rf.A, 0), new char[] {'Z', '1', 'H', 'C'}, 1, new int[] {4,0});
operations[0xc0] = new Operation("RET NZ", (CPU cpu) -> cpu.RET(Condition.NZ, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {20,8});
operations[0xc1] = new Operation("POP BC", (CPU cpu) -> cpu.POP(rf.BC), new char[] {'-', '-', '-', '-'}, 1, new int[] {12,0});
operations[0xc2] = new Operation("JP NZ a16", (CPU cpu) -> cpu.JP(null, Condition.NZ, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,12});
operations[0xc3] = new Operation("JP a16", (CPU cpu) -> cpu.JP(null, Condition.NONE, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,0});
operations[0xc4] = new Operation("CALL NZ a16", (CPU cpu) -> cpu.CALL(Condition.NZ, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {24,12});
operations[0xc5] = new Operation("PUSH BC", (CPU cpu) -> cpu.PUSH(rf.BC), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xc6] = new Operation("ADD A d8", (CPU cpu) -> cpu.ADD_8(rf.A, null, d8(), false), new char[] {'Z', '0', 'H', 'C'}, 2, new int[] {8,0});
operations[0xc7] = new Operation("RST 00H", (CPU cpu) -> cpu.RST(0x00), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xc8] = new Operation("RET Z", (CPU cpu) -> cpu.RET(Condition.Z, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {20,8});
operations[0xc9] = new Operation("RET", (CPU cpu) -> cpu.RET(Condition.NONE, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xca] = new Operation("JP Z a16", (CPU cpu) -> cpu.JP(null, Condition.Z, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,12});
operations[0xcc] = new Operation("CALL Z a16", (CPU cpu) -> cpu.CALL(Condition.Z, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {24,12});
operations[0xcd] = new Operation("CALL a16", (CPU cpu) -> cpu.CALL(Condition.NONE, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {24,0});
operations[0xce] = new Operation("ADC A d8", (CPU cpu) -> cpu.ADC(rf.A, null, d8()), new char[] {'Z', '0', 'H', 'C'}, 2, new int[] {8,0});
operations[0xcf] = new Operation("RST 08H", (CPU cpu) -> cpu.RST(0x08), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xd0] = new Operation("RET NC", (CPU cpu) -> cpu.RET(Condition.NC, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {20,8});
operations[0xd1] = new Operation("POP DE", (CPU cpu) -> cpu.POP(rf.DE), new char[] {'-', '-', '-', '-'}, 1, new int[] {12,0});
operations[0xd2] = new Operation("JP NC a16", (CPU cpu) -> cpu.JP(null, Condition.NC, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,12});
operations[0xd4] = new Operation("CALL NC a16", (CPU cpu) -> cpu.CALL(Condition.NC, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {24,12});
operations[0xd5] = new Operation("PUSH DE", (CPU cpu) -> cpu.PUSH(rf.DE), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xd6] = new Operation("SUB d8", (CPU cpu) -> cpu.SUB(rf.A, null, d8(), false, true), new char[] {'Z', '1', 'H', 'C'}, 2, new int[] {8,0});
operations[0xd7] = new Operation("RST 10H", (CPU cpu) -> cpu.RST(0x10), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xd8] = new Operation("RET C", (CPU cpu) -> cpu.RET(Condition.C, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {20,8});
operations[0xd9] = new Operation("RETI", (CPU cpu) -> cpu.RET(Condition.NONE, true), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xda] = new Operation("JP C a16", (CPU cpu) -> cpu.JP(null, Condition.C, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,12});
operations[0xdc] = new Operation("CALL C a16", (CPU cpu) -> cpu.CALL(Condition.C, a16()), new char[] {'-', '-', '-', '-'}, 3, new int[] {24,12});
operations[0xde] = new Operation("SBC A d8", (CPU cpu) -> cpu.SBC(rf.A, null, d8()), new char[] {'Z', '1', 'H', 'C'}, 2, new int[] {8,0});
operations[0xdf] = new Operation("RST 18H", (CPU cpu) -> cpu.RST(0x18), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xe0] = new Operation("LDH (a8) A", (CPU cpu) -> cpu.LD_8(null, rf.A, a8(), -1, true, false, true, false, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,0});
operations[0xe1] = new Operation("POP HL", (CPU cpu) -> cpu.POP(rf.HL), new char[] {'-', '-', '-', '-'}, 1, new int[] {12,0});
operations[0xe2] = new Operation("LD (C) A", (CPU cpu) -> cpu.LD_8(rf.C, rf.A, -1, -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0xe5] = new Operation("PUSH HL", (CPU cpu) -> cpu.PUSH(rf.HL), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xe6] = new Operation("AND d8", (CPU cpu) -> cpu.AND(rf.A, null, d8()), new char[] {'Z', '0', '1', '0'}, 2, new int[] {8,0});
operations[0xe7] = new Operation("RST 20H", (CPU cpu) -> cpu.RST(0x20), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xe8] = new Operation("ADD SP r8", (CPU cpu) -> cpu.ADD_SP(r8()), new char[] {'0', '0', 'H', 'C'}, 2, new int[] {16,0});
operations[0xe9] = new Operation("JP (HL)", (CPU cpu) -> cpu.JP(rf.HL, Condition.NONE, -1), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0xea] = new Operation("LD (a16) A", (CPU cpu) -> cpu.LD_8(null, rf.A, a16(), -1, true, false, false, false, false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,0});
operations[0xee] = new Operation("XOR d8", (CPU cpu) -> cpu.XOR(rf.A, null, d8()), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0xef] = new Operation("RST 28H", (CPU cpu) -> cpu.RST(0x28), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xf0] = new Operation("LDH A (a8)", (CPU cpu) -> cpu.LD_8(rf.A, null, -1, a8(), false, true, false, true, false, false), new char[] {'-', '-', '-', '-'}, 2, new int[] {12,0});
operations[0xf1] = new Operation("POP AF", (CPU cpu) -> cpu.POP(rf.AF), new char[] {'Z', 'N', 'H', 'C'}, 1, new int[] {12,0});
operations[0xf2] = new Operation("LD A (C)", (CPU cpu) -> cpu.LD_8(rf.A, rf.C, -1, -1, false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0xf3] = new Operation("DI", (CPU cpu) -> cpu.DI(), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0xf5] = new Operation("PUSH AF", (CPU cpu) -> cpu.PUSH(rf.AF), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xf6] = new Operation("OR d8", (CPU cpu) -> cpu.OR(rf.A, null, d8()), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0xf7] = new Operation("RST 30H", (CPU cpu) -> cpu.RST(0x30), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0xf8] = new Operation("LD HL SP+r8", (CPU cpu) -> cpu.LD_16(rf.HL, null, -1, r8(), false, true), new char[] {'0', '0', 'H', 'C'}, 2, new int[] {12,0});
operations[0xf9] = new Operation("LD SP HL", (CPU cpu) -> cpu.LD_16(rf.SP, rf.HL, -1, -1, false, false), new char[] {'-', '-', '-', '-'}, 1, new int[] {8,0});
operations[0xfa] = new Operation("LD A (a16)", (CPU cpu) -> cpu.LD_8(rf.A, null, -1, a16(), false, true, false, false, false, false), new char[] {'-', '-', '-', '-'}, 3, new int[] {16,0});
operations[0xfb] = new Operation("EI", (CPU cpu) -> cpu.EI(), new char[] {'-', '-', '-', '-'}, 1, new int[] {4,0});
operations[0xfe] = new Operation("CP d8", (CPU cpu) -> cpu.CP(rf.A, null, d8()), new char[] {'Z', '1', 'H', 'C'}, 2, new int[] {8,0});
operations[0xff] = new Operation("RST 38H", (CPU cpu) -> cpu.RST(0x38), new char[] {'-', '-', '-', '-'}, 1, new int[] {16,0});
operations[0x100+0x00] = new Operation("RLC B", (CPU cpu) -> cpu.RLC(rf.B), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x01] = new Operation("RLC C", (CPU cpu) -> cpu.RLC(rf.C), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x02] = new Operation("RLC D", (CPU cpu) -> cpu.RLC(rf.D), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x03] = new Operation("RLC E", (CPU cpu) -> cpu.RLC(rf.E), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x04] = new Operation("RLC H", (CPU cpu) -> cpu.RLC(rf.H), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x05] = new Operation("RLC L", (CPU cpu) -> cpu.RLC(rf.L), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x06] = new Operation("RLC (HL)", (CPU cpu) -> cpu.RLC(rf.HL), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {16,0});
operations[0x100+0x07] = new Operation("RLC A", (CPU cpu) -> cpu.RLC(rf.A), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x08] = new Operation("RRC B", (CPU cpu) -> cpu.RRC(rf.B), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x09] = new Operation("RRC C", (CPU cpu) -> cpu.RRC(rf.C), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x0a] = new Operation("RRC D", (CPU cpu) -> cpu.RRC(rf.D), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x0b] = new Operation("RRC E", (CPU cpu) -> cpu.RRC(rf.E), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x0c] = new Operation("RRC H", (CPU cpu) -> cpu.RRC(rf.H), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x0d] = new Operation("RRC L", (CPU cpu) -> cpu.RRC(rf.L), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x0e] = new Operation("RRC (HL)", (CPU cpu) -> cpu.RRC(rf.HL), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {16,0});
operations[0x100+0x0f] = new Operation("RRC A", (CPU cpu) -> cpu.RRC(rf.A), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x10] = new Operation("RL B", (CPU cpu) -> cpu.RL(rf.B), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x11] = new Operation("RL C", (CPU cpu) -> cpu.RL(rf.C), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x12] = new Operation("RL D", (CPU cpu) -> cpu.RL(rf.D), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x13] = new Operation("RL E", (CPU cpu) -> cpu.RL(rf.E), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x14] = new Operation("RL H", (CPU cpu) -> cpu.RL(rf.H), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x15] = new Operation("RL L", (CPU cpu) -> cpu.RL(rf.L), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x16] = new Operation("RL (HL)", (CPU cpu) -> cpu.RL(rf.HL), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {16,0});
operations[0x100+0x17] = new Operation("RL A", (CPU cpu) -> cpu.RL(rf.A), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x18] = new Operation("RR B", (CPU cpu) -> cpu.RR(rf.B), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x19] = new Operation("RR C", (CPU cpu) -> cpu.RR(rf.C), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x1a] = new Operation("RR D", (CPU cpu) -> cpu.RR(rf.D), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x1b] = new Operation("RR E", (CPU cpu) -> cpu.RR(rf.E), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x1c] = new Operation("RR H", (CPU cpu) -> cpu.RR(rf.H), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x1d] = new Operation("RR L", (CPU cpu) -> cpu.RR(rf.L), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x1e] = new Operation("RR (HL)", (CPU cpu) -> cpu.RR(rf.HL), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {16,0});
operations[0x100+0x1f] = new Operation("RR A", (CPU cpu) -> cpu.RR(rf.A), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x20] = new Operation("SLA B", (CPU cpu) -> cpu.SLA(rf.B), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x21] = new Operation("SLA C", (CPU cpu) -> cpu.SLA(rf.C), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x22] = new Operation("SLA D", (CPU cpu) -> cpu.SLA(rf.D), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x23] = new Operation("SLA E", (CPU cpu) -> cpu.SLA(rf.E), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x24] = new Operation("SLA H", (CPU cpu) -> cpu.SLA(rf.H), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x25] = new Operation("SLA L", (CPU cpu) -> cpu.SLA(rf.L), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x26] = new Operation("SLA (HL)", (CPU cpu) -> cpu.SLA(rf.HL), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {16,0});
operations[0x100+0x27] = new Operation("SLA A", (CPU cpu) -> cpu.SLA(rf.A), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x28] = new Operation("SRA B", (CPU cpu) -> cpu.SRA(rf.B), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x29] = new Operation("SRA C", (CPU cpu) -> cpu.SRA(rf.C), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x2a] = new Operation("SRA D", (CPU cpu) -> cpu.SRA(rf.D), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x2b] = new Operation("SRA E", (CPU cpu) -> cpu.SRA(rf.E), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x2c] = new Operation("SRA H", (CPU cpu) -> cpu.SRA(rf.H), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x2d] = new Operation("SRA L", (CPU cpu) -> cpu.SRA(rf.L), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x2e] = new Operation("SRA (HL)", (CPU cpu) -> cpu.SRA(rf.HL), new char[] {'Z', '0', '0', '0'}, 2, new int[] {16,0});
operations[0x100+0x2f] = new Operation("SRA A", (CPU cpu) -> cpu.SRA(rf.A), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x30] = new Operation("SWAP B", (CPU cpu) -> cpu.SWAP(rf.B), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x31] = new Operation("SWAP C", (CPU cpu) -> cpu.SWAP(rf.C), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x32] = new Operation("SWAP D", (CPU cpu) -> cpu.SWAP(rf.D), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x33] = new Operation("SWAP E", (CPU cpu) -> cpu.SWAP(rf.E), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x34] = new Operation("SWAP H", (CPU cpu) -> cpu.SWAP(rf.H), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x35] = new Operation("SWAP L", (CPU cpu) -> cpu.SWAP(rf.L), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x36] = new Operation("SWAP (HL)", (CPU cpu) -> cpu.SWAP(rf.HL), new char[] {'Z', '0', '0', '0'}, 2, new int[] {16,0});
operations[0x100+0x37] = new Operation("SWAP A", (CPU cpu) -> cpu.SWAP(rf.A), new char[] {'Z', '0', '0', '0'}, 2, new int[] {8,0});
operations[0x100+0x38] = new Operation("SRL B", (CPU cpu) -> cpu.SRL(rf.B), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x39] = new Operation("SRL C", (CPU cpu) -> cpu.SRL(rf.C), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x3a] = new Operation("SRL D", (CPU cpu) -> cpu.SRL(rf.D), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x3b] = new Operation("SRL E", (CPU cpu) -> cpu.SRL(rf.E), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x3c] = new Operation("SRL H", (CPU cpu) -> cpu.SRL(rf.H), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x3d] = new Operation("SRL L", (CPU cpu) -> cpu.SRL(rf.L), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x3e] = new Operation("SRL (HL)", (CPU cpu) -> cpu.SRL(rf.HL), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {16,0});
operations[0x100+0x3f] = new Operation("SRL A", (CPU cpu) -> cpu.SRL(rf.A), new char[] {'Z', '0', '0', 'C'}, 2, new int[] {8,0});
operations[0x100+0x40] = new Operation("BIT 0 B", (CPU cpu) -> cpu.BIT(rf.B, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x41] = new Operation("BIT 0 C", (CPU cpu) -> cpu.BIT(rf.C, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x42] = new Operation("BIT 0 D", (CPU cpu) -> cpu.BIT(rf.D, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x43] = new Operation("BIT 0 E", (CPU cpu) -> cpu.BIT(rf.E, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x44] = new Operation("BIT 0 H", (CPU cpu) -> cpu.BIT(rf.H, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x45] = new Operation("BIT 0 L", (CPU cpu) -> cpu.BIT(rf.L, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x46] = new Operation("BIT 0 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x47] = new Operation("BIT 0 A", (CPU cpu) -> cpu.BIT(rf.A, 0), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x48] = new Operation("BIT 1 B", (CPU cpu) -> cpu.BIT(rf.B, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x49] = new Operation("BIT 1 C", (CPU cpu) -> cpu.BIT(rf.C, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x4a] = new Operation("BIT 1 D", (CPU cpu) -> cpu.BIT(rf.D, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x4b] = new Operation("BIT 1 E", (CPU cpu) -> cpu.BIT(rf.E, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x4c] = new Operation("BIT 1 H", (CPU cpu) -> cpu.BIT(rf.H, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x4d] = new Operation("BIT 1 L", (CPU cpu) -> cpu.BIT(rf.L, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x4e] = new Operation("BIT 1 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x4f] = new Operation("BIT 1 A", (CPU cpu) -> cpu.BIT(rf.A, 1), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x50] = new Operation("BIT 2 B", (CPU cpu) -> cpu.BIT(rf.B, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x51] = new Operation("BIT 2 C", (CPU cpu) -> cpu.BIT(rf.C, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x52] = new Operation("BIT 2 D", (CPU cpu) -> cpu.BIT(rf.D, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x53] = new Operation("BIT 2 E", (CPU cpu) -> cpu.BIT(rf.E, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x54] = new Operation("BIT 2 H", (CPU cpu) -> cpu.BIT(rf.H, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x55] = new Operation("BIT 2 L", (CPU cpu) -> cpu.BIT(rf.L, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x56] = new Operation("BIT 2 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x57] = new Operation("BIT 2 A", (CPU cpu) -> cpu.BIT(rf.A, 2), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x58] = new Operation("BIT 3 B", (CPU cpu) -> cpu.BIT(rf.B, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x59] = new Operation("BIT 3 C", (CPU cpu) -> cpu.BIT(rf.C, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x5a] = new Operation("BIT 3 D", (CPU cpu) -> cpu.BIT(rf.D, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x5b] = new Operation("BIT 3 E", (CPU cpu) -> cpu.BIT(rf.E, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x5c] = new Operation("BIT 3 H", (CPU cpu) -> cpu.BIT(rf.H, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x5d] = new Operation("BIT 3 L", (CPU cpu) -> cpu.BIT(rf.L, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x5e] = new Operation("BIT 3 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x5f] = new Operation("BIT 3 A", (CPU cpu) -> cpu.BIT(rf.A, 3), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x60] = new Operation("BIT 4 B", (CPU cpu) -> cpu.BIT(rf.B, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x61] = new Operation("BIT 4 C", (CPU cpu) -> cpu.BIT(rf.C, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x62] = new Operation("BIT 4 D", (CPU cpu) -> cpu.BIT(rf.D, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x63] = new Operation("BIT 4 E", (CPU cpu) -> cpu.BIT(rf.E, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x64] = new Operation("BIT 4 H", (CPU cpu) -> cpu.BIT(rf.H, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x65] = new Operation("BIT 4 L", (CPU cpu) -> cpu.BIT(rf.L, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x66] = new Operation("BIT 4 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x67] = new Operation("BIT 4 A", (CPU cpu) -> cpu.BIT(rf.A, 4), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x68] = new Operation("BIT 5 B", (CPU cpu) -> cpu.BIT(rf.B, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x69] = new Operation("BIT 5 C", (CPU cpu) -> cpu.BIT(rf.C, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x6a] = new Operation("BIT 5 D", (CPU cpu) -> cpu.BIT(rf.D, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x6b] = new Operation("BIT 5 E", (CPU cpu) -> cpu.BIT(rf.E, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x6c] = new Operation("BIT 5 H", (CPU cpu) -> cpu.BIT(rf.H, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x6d] = new Operation("BIT 5 L", (CPU cpu) -> cpu.BIT(rf.L, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x6e] = new Operation("BIT 5 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x6f] = new Operation("BIT 5 A", (CPU cpu) -> cpu.BIT(rf.A, 5), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x70] = new Operation("BIT 6 B", (CPU cpu) -> cpu.BIT(rf.B, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x71] = new Operation("BIT 6 C", (CPU cpu) -> cpu.BIT(rf.C, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x72] = new Operation("BIT 6 D", (CPU cpu) -> cpu.BIT(rf.D, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x73] = new Operation("BIT 6 E", (CPU cpu) -> cpu.BIT(rf.E, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x74] = new Operation("BIT 6 H", (CPU cpu) -> cpu.BIT(rf.H, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x75] = new Operation("BIT 6 L", (CPU cpu) -> cpu.BIT(rf.L, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x76] = new Operation("BIT 6 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x77] = new Operation("BIT 6 A", (CPU cpu) -> cpu.BIT(rf.A, 6), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x78] = new Operation("BIT 7 B", (CPU cpu) -> cpu.BIT(rf.B, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x79] = new Operation("BIT 7 C", (CPU cpu) -> cpu.BIT(rf.C, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x7a] = new Operation("BIT 7 D", (CPU cpu) -> cpu.BIT(rf.D, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x7b] = new Operation("BIT 7 E", (CPU cpu) -> cpu.BIT(rf.E, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x7c] = new Operation("BIT 7 H", (CPU cpu) -> cpu.BIT(rf.H, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x7d] = new Operation("BIT 7 L", (CPU cpu) -> cpu.BIT(rf.L, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x7e] = new Operation("BIT 7 (HL)", (CPU cpu) -> cpu.BIT(rf.HL, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {16,0});
operations[0x100+0x7f] = new Operation("BIT 7 A", (CPU cpu) -> cpu.BIT(rf.A, 7), new char[] {'Z', '0', '1', '-'}, 2, new int[] {8,0});
operations[0x100+0x80] = new Operation("RES 0 B", (CPU cpu) -> cpu.RES(rf.B, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x81] = new Operation("RES 0 C", (CPU cpu) -> cpu.RES(rf.C, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x82] = new Operation("RES 0 D", (CPU cpu) -> cpu.RES(rf.D, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x83] = new Operation("RES 0 E", (CPU cpu) -> cpu.RES(rf.E, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x84] = new Operation("RES 0 H", (CPU cpu) -> cpu.RES(rf.H, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x85] = new Operation("RES 0 L", (CPU cpu) -> cpu.RES(rf.L, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x86] = new Operation("RES 0 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0x87] = new Operation("RES 0 A", (CPU cpu) -> cpu.RES(rf.A, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x88] = new Operation("RES 1 B", (CPU cpu) -> cpu.RES(rf.B, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x89] = new Operation("RES 1 C", (CPU cpu) -> cpu.RES(rf.C, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x8a] = new Operation("RES 1 D", (CPU cpu) -> cpu.RES(rf.D, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x8b] = new Operation("RES 1 E", (CPU cpu) -> cpu.RES(rf.E, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x8c] = new Operation("RES 1 H", (CPU cpu) -> cpu.RES(rf.H, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x8d] = new Operation("RES 1 L", (CPU cpu) -> cpu.RES(rf.L, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x8e] = new Operation("RES 1 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0x8f] = new Operation("RES 1 A", (CPU cpu) -> cpu.RES(rf.A, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x90] = new Operation("RES 2 B", (CPU cpu) -> cpu.RES(rf.B, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x91] = new Operation("RES 2 C", (CPU cpu) -> cpu.RES(rf.C, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x92] = new Operation("RES 2 D", (CPU cpu) -> cpu.RES(rf.D, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x93] = new Operation("RES 2 E", (CPU cpu) -> cpu.RES(rf.E, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x94] = new Operation("RES 2 H", (CPU cpu) -> cpu.RES(rf.H, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x95] = new Operation("RES 2 L", (CPU cpu) -> cpu.RES(rf.L, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x96] = new Operation("RES 2 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0x97] = new Operation("RES 2 A", (CPU cpu) -> cpu.RES(rf.A, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x98] = new Operation("RES 3 B", (CPU cpu) -> cpu.RES(rf.B, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x99] = new Operation("RES 3 C", (CPU cpu) -> cpu.RES(rf.C, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x9a] = new Operation("RES 3 D", (CPU cpu) -> cpu.RES(rf.D, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x9b] = new Operation("RES 3 E", (CPU cpu) -> cpu.RES(rf.E, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x9c] = new Operation("RES 3 H", (CPU cpu) -> cpu.RES(rf.H, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x9d] = new Operation("RES 3 L", (CPU cpu) -> cpu.RES(rf.L, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0x9e] = new Operation("RES 3 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0x9f] = new Operation("RES 3 A", (CPU cpu) -> cpu.RES(rf.A, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa0] = new Operation("RES 4 B", (CPU cpu) -> cpu.RES(rf.B, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa1] = new Operation("RES 4 C", (CPU cpu) -> cpu.RES(rf.C, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa2] = new Operation("RES 4 D", (CPU cpu) -> cpu.RES(rf.D, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa3] = new Operation("RES 4 E", (CPU cpu) -> cpu.RES(rf.E, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa4] = new Operation("RES 4 H", (CPU cpu) -> cpu.RES(rf.H, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa5] = new Operation("RES 4 L", (CPU cpu) -> cpu.RES(rf.L, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa6] = new Operation("RES 4 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xa7] = new Operation("RES 4 A", (CPU cpu) -> cpu.RES(rf.A, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa8] = new Operation("RES 5 B", (CPU cpu) -> cpu.RES(rf.B, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xa9] = new Operation("RES 5 C", (CPU cpu) -> cpu.RES(rf.C, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xaa] = new Operation("RES 5 D", (CPU cpu) -> cpu.RES(rf.D, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xab] = new Operation("RES 5 E", (CPU cpu) -> cpu.RES(rf.E, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xac] = new Operation("RES 5 H", (CPU cpu) -> cpu.RES(rf.H, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xad] = new Operation("RES 5 L", (CPU cpu) -> cpu.RES(rf.L, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xae] = new Operation("RES 5 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xaf] = new Operation("RES 5 A", (CPU cpu) -> cpu.RES(rf.A, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb0] = new Operation("RES 6 B", (CPU cpu) -> cpu.RES(rf.B, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb1] = new Operation("RES 6 C", (CPU cpu) -> cpu.RES(rf.C, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb2] = new Operation("RES 6 D", (CPU cpu) -> cpu.RES(rf.D, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb3] = new Operation("RES 6 E", (CPU cpu) -> cpu.RES(rf.E, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb4] = new Operation("RES 6 H", (CPU cpu) -> cpu.RES(rf.H, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb5] = new Operation("RES 6 L", (CPU cpu) -> cpu.RES(rf.L, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb6] = new Operation("RES 6 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xb7] = new Operation("RES 6 A", (CPU cpu) -> cpu.RES(rf.A, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb8] = new Operation("RES 7 B", (CPU cpu) -> cpu.RES(rf.B, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xb9] = new Operation("RES 7 C", (CPU cpu) -> cpu.RES(rf.C, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xba] = new Operation("RES 7 D", (CPU cpu) -> cpu.RES(rf.D, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xbb] = new Operation("RES 7 E", (CPU cpu) -> cpu.RES(rf.E, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xbc] = new Operation("RES 7 H", (CPU cpu) -> cpu.RES(rf.H, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xbd] = new Operation("RES 7 L", (CPU cpu) -> cpu.RES(rf.L, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xbe] = new Operation("RES 7 (HL)", (CPU cpu) -> cpu.RES(rf.HL, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xbf] = new Operation("RES 7 A", (CPU cpu) -> cpu.RES(rf.A, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc0] = new Operation("SET 0 B", (CPU cpu) -> cpu.SET(rf.B, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc1] = new Operation("SET 0 C", (CPU cpu) -> cpu.SET(rf.C, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc2] = new Operation("SET 0 D", (CPU cpu) -> cpu.SET(rf.D, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc3] = new Operation("SET 0 E", (CPU cpu) -> cpu.SET(rf.E, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc4] = new Operation("SET 0 H", (CPU cpu) -> cpu.SET(rf.H, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc5] = new Operation("SET 0 L", (CPU cpu) -> cpu.SET(rf.L, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc6] = new Operation("SET 0 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xc7] = new Operation("SET 0 A", (CPU cpu) -> cpu.SET(rf.A, 0), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc8] = new Operation("SET 1 B", (CPU cpu) -> cpu.SET(rf.B, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xc9] = new Operation("SET 1 C", (CPU cpu) -> cpu.SET(rf.C, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xca] = new Operation("SET 1 D", (CPU cpu) -> cpu.SET(rf.D, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xcb] = new Operation("SET 1 E", (CPU cpu) -> cpu.SET(rf.E, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xcc] = new Operation("SET 1 H", (CPU cpu) -> cpu.SET(rf.H, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xcd] = new Operation("SET 1 L", (CPU cpu) -> cpu.SET(rf.L, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xce] = new Operation("SET 1 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xcf] = new Operation("SET 1 A", (CPU cpu) -> cpu.SET(rf.A, 1), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd0] = new Operation("SET 2 B", (CPU cpu) -> cpu.SET(rf.B, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd1] = new Operation("SET 2 C", (CPU cpu) -> cpu.SET(rf.C, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd2] = new Operation("SET 2 D", (CPU cpu) -> cpu.SET(rf.D, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd3] = new Operation("SET 2 E", (CPU cpu) -> cpu.SET(rf.E, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd4] = new Operation("SET 2 H", (CPU cpu) -> cpu.SET(rf.H, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd5] = new Operation("SET 2 L", (CPU cpu) -> cpu.SET(rf.L, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd6] = new Operation("SET 2 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xd7] = new Operation("SET 2 A", (CPU cpu) -> cpu.SET(rf.A, 2), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd8] = new Operation("SET 3 B", (CPU cpu) -> cpu.SET(rf.B, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xd9] = new Operation("SET 3 C", (CPU cpu) -> cpu.SET(rf.C, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xda] = new Operation("SET 3 D", (CPU cpu) -> cpu.SET(rf.D, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xdb] = new Operation("SET 3 E", (CPU cpu) -> cpu.SET(rf.E, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xdc] = new Operation("SET 3 H", (CPU cpu) -> cpu.SET(rf.H, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xdd] = new Operation("SET 3 L", (CPU cpu) -> cpu.SET(rf.L, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xde] = new Operation("SET 3 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xdf] = new Operation("SET 3 A", (CPU cpu) -> cpu.SET(rf.A, 3), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe0] = new Operation("SET 4 B", (CPU cpu) -> cpu.SET(rf.B, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe1] = new Operation("SET 4 C", (CPU cpu) -> cpu.SET(rf.C, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe2] = new Operation("SET 4 D", (CPU cpu) -> cpu.SET(rf.D, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe3] = new Operation("SET 4 E", (CPU cpu) -> cpu.SET(rf.E, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe4] = new Operation("SET 4 H", (CPU cpu) -> cpu.SET(rf.H, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe5] = new Operation("SET 4 L", (CPU cpu) -> cpu.SET(rf.L, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe6] = new Operation("SET 4 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xe7] = new Operation("SET 4 A", (CPU cpu) -> cpu.SET(rf.A, 4), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe8] = new Operation("SET 5 B", (CPU cpu) -> cpu.SET(rf.B, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xe9] = new Operation("SET 5 C", (CPU cpu) -> cpu.SET(rf.C, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xea] = new Operation("SET 5 D", (CPU cpu) -> cpu.SET(rf.D, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xeb] = new Operation("SET 5 E", (CPU cpu) -> cpu.SET(rf.E, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xec] = new Operation("SET 5 H", (CPU cpu) -> cpu.SET(rf.H, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xed] = new Operation("SET 5 L", (CPU cpu) -> cpu.SET(rf.L, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xee] = new Operation("SET 5 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xef] = new Operation("SET 5 A", (CPU cpu) -> cpu.SET(rf.A, 5), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf0] = new Operation("SET 6 B", (CPU cpu) -> cpu.SET(rf.B, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf1] = new Operation("SET 6 C", (CPU cpu) -> cpu.SET(rf.C, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf2] = new Operation("SET 6 D", (CPU cpu) -> cpu.SET(rf.D, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf3] = new Operation("SET 6 E", (CPU cpu) -> cpu.SET(rf.E, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf4] = new Operation("SET 6 H", (CPU cpu) -> cpu.SET(rf.H, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf5] = new Operation("SET 6 L", (CPU cpu) -> cpu.SET(rf.L, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf6] = new Operation("SET 6 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xf7] = new Operation("SET 6 A", (CPU cpu) -> cpu.SET(rf.A, 6), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf8] = new Operation("SET 7 B", (CPU cpu) -> cpu.SET(rf.B, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xf9] = new Operation("SET 7 C", (CPU cpu) -> cpu.SET(rf.C, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xfa] = new Operation("SET 7 D", (CPU cpu) -> cpu.SET(rf.D, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xfb] = new Operation("SET 7 E", (CPU cpu) -> cpu.SET(rf.E, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xfc] = new Operation("SET 7 H", (CPU cpu) -> cpu.SET(rf.H, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xfd] = new Operation("SET 7 L", (CPU cpu) -> cpu.SET(rf.L, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
operations[0x100+0xfe] = new Operation("SET 7 (HL)", (CPU cpu) -> cpu.SET(rf.HL, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {16,0});
operations[0x100+0xff] = new Operation("SET 7 A", (CPU cpu) -> cpu.SET(rf.A, 7), new char[] {'-', '-', '-', '-'}, 2, new int[] {8,0});
